type AbilityCastType = { readonly __AbilityCastType: unique symbol };
type AbilityIndex = number;
type AbilityKey = { readonly __AbilityKey: unique symbol };
type AbilitySeq = { readonly __AbilitySeq: unique symbol };
type AbilityStrAttr = { readonly __AbilityStrAttr: unique symbol };
type AbilityType = { readonly __AbilityType: unique symbol };
type Actor = { readonly __Actor: unique symbol };
type ActorList = { readonly __ActorList: unique symbol };
type Area = { readonly __Area: unique symbol };
type AreaID = { readonly __AreaID: unique symbol };
type AttackTargetHitType = { readonly __AttackTargetHitType: unique symbol };
type AudioKey = { readonly __AudioKey: unique symbol };
type Camera = { readonly __Camera: unique symbol };
type Camp = { readonly __Camp: unique symbol };
type CampID = { readonly __CampID: unique symbol };
type CirArea = { readonly __CirArea: unique symbol };
type CurvedPath = { readonly __CurvedPath: unique symbol };
type DestructibleID = { readonly __DestructibleID: unique symbol };
type DestructibleKey = { readonly __DestructibleKey: unique symbol };
type Dict = { readonly __Dict: unique symbol };
type DynamicTriggerInstance = {
  readonly __DynamicTriggerInstance: unique symbol;
};
type DynamicTypeMeta = { readonly __DynamicTypeMeta: unique symbol };
type Fixed = { readonly __Fixed: unique symbol };
type Float = number;
type FPoint = { readonly __FPoint: unique symbol };
type FVector2 = { readonly __FVector2: unique symbol };
type FVector3 = { readonly __FVector3: unique symbol };
type Int16 = number;
type Int32 = number;
type Int32Iterator = { readonly __Int32Iterator: unique symbol };
type Int64 = number;
type Int8 = number;
type ItemGroup = { readonly __ItemGroup: unique symbol };
type ItemID = { readonly __ItemID: unique symbol };
type ItemKey = { readonly __ItemKey: unique symbol };
type KeyboardKey = { readonly __KeyboardKey: unique symbol };
type KVBase = { readonly __KVBase: unique symbol };
type LinkSfx = { readonly __LinkSfx: unique symbol };
type LinkSfxPointType = { readonly __LinkSfxPointType: unique symbol };
type List = { readonly __List: unique symbol };
type Model = { readonly __Model: unique symbol };
type ModelKey = { readonly __ModelKey: unique symbol };
type ModifierEffectType = { readonly __ModifierEffectType: unique symbol };
type ModifierKey = { readonly __ModifierKey: unique symbol };
type ModifierType = { readonly __ModifierType: unique symbol };
type MouseKey = { readonly __MouseKey: unique symbol };
type MovementObstacleProcessType = {
  readonly __MovementObstacleProcessType: unique symbol;
};
type Point = { readonly __Point: unique symbol };
type PolyArea = { readonly __PolyArea: unique symbol };
type ProjectileGroup = { readonly __ProjectileGroup: unique symbol };
type ProjectileID = { readonly __ProjectileID: unique symbol };
type ProjectileKey = { readonly __ProjectileKey: unique symbol };
type PyIterator = { readonly __PyIterator: unique symbol };
type RandomPool = { readonly __RandomPool: unique symbol };
type RecArea = { readonly __RecArea: unique symbol };
type Road = { readonly __Road: unique symbol };
type RoadGroup = { readonly __RoadGroup: unique symbol };
type RoleGroup = { readonly __RoleGroup: unique symbol };
type RoleID = { readonly __RoleID: unique symbol };
type RoleResKey = { readonly __RoleResKey: unique symbol };
type RoleStatus = { readonly __RoleStatus: unique symbol };
type RoleType = { readonly __RoleType: unique symbol };
type Sfx = { readonly __Sfx: unique symbol };
type SfxKey = { readonly __SfxKey: unique symbol };
// Enum
type SfxVisibleType = { readonly __SfxVisibleType: unique symbol };
type Shape = { readonly __Shape: unique symbol };
type SlotType = { readonly __SlotType: unique symbol };
type SoundEntity = { readonly __SoundEntity: unique symbol };
type StoreKey = { readonly __StoreKey: unique symbol };
type TabIdx = { readonly __TabIdx: unique symbol };
type TabName = { readonly __TabName: unique symbol };
type TechKey = { readonly __TechKey: unique symbol };
type Texture = { readonly __Texture: unique symbol };
type Timer = { readonly __Timer: unique symbol };
type TriggerID = { readonly __TriggerID: unique symbol };
type UInt16 = number;
type UInt32 = number;
type UInt64 = number;
type UInt8 = number;
type UnitCommand = { readonly __UnitCommand: unique symbol };
type UnitGroup = { readonly __UnitGroup: unique symbol };
type UnitID = { readonly __UnitID: unique symbol };
type UnitKey = { readonly __UnitKey: unique symbol };
type UnitKeyPool = { readonly __UnitKeyPool: unique symbol };
type UnitType = { readonly __UnitType: unique symbol };
type Vector2 = { readonly __Vector2: unique symbol };
type Vector3 = { readonly __Vector3: unique symbol };
type WorldUINode = { readonly __WorldUINode: unique symbol };
